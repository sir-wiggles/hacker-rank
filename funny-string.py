class MockInput(object):
    def __init__(self, *args):
        self.args = args
        self.count = 0
    def __call__(self):
        value = self.args[self.count]
        self.count += 1
        return value

input = '''2
acxz
bcxz'''
input = '''1
uotunptvpruyumovqsyvotlsumnrstlpwswrwpvyqyswpxzwxpvnrwqvqwxszrzuxuvnpvxyszvztzszuysksvzvwskrunqwyvqtlruzvoprvowoqvopwytmswrzwpuyzystzrwysxuvywosysxtlmpuyrvpvwxrsysztworywsuxuzrstwopuytxqstmpvnvztysxptzwrzuwpuwxtwqxqrxpquwqtvwouosxzyrxptmsklswzvxyunvzwyzuxzumtlqyzwqyswqwswxrywqstzuxqvopvyqvyuyvoprvqxyqstzruxyvnsxrtwqxrxumnuwpwzwzxuxuyqtzxumowszysxqtvxzxpstztwxqvyzrtwruoswryvqvoryquvwzwxyqtuowzszvwsyszxztxrtvwoptlmtwyrtxqyvwqswqvwsvxskpstzwxrxpwsumosvnqwowpsxuyqvqvqszunotysxuwqsvwsvyzxzsxqrztzvxzumsworztmovzwxsyvovqrwxqwosvyswotuxsvxzyvnsxpqsvowpwrytvpqumszsunouwyrtxrxpvprzuvpsxtlrskltyrysyrvoprzvntxsvqunstvxtunrzruystuxptumstwrxrskmqxqumunvprytxzwrtyuouxuotmpszxtvnpunorxquyvotyvoqwszrxtyuovxqsvoszuyzwyuotvyzuvxzvnpqtzvnrwpunskpquzwrzyzyvxsvyrxumsxstyqvyuxqununqsvxzvxtyrxqvyzvntltvoswysuzvnqwxrywxpuztvywswruvzxzxsxtvpxsxuwqyqxpxtxsxryzyvyzsxzrsyvyvyrzuvqumpsztzvyvxuyuzvxysuwzvztzxsuwxsuxqyzvyvosxzrsxywywzuouwzsytuoprzrsknrtuntvpwpwowoquzsxpuwsxquovyrxrtlrzumsvptvqtwxpqvounprwrzwouvqxprxtuxqwqyvwzworyskpwywzyuwquosvnovnrwqrvnouwopxskpstztuvouzuvosuzwrskpuntvnsumoquywxyvwowrvwszxpqwxywryrxqumsxyzrtuvzyquorvwxsklnvwzvnprxstwxyvnpskqtmnvwskltlnovxuxyuyskowosumrvoqxrtztyszvqyuxyrwywovxunoumuxtmqswqxywsztlrsvovowxqwyzvxquwxqyumpqwzwywopworwprvowyqytuowysyzxsvxuoswpswrunpqytmtztzwquwopxprvyuowpqwytvzwzvxprzunszvnorsknpsxstxtuvqvxpwrumqunvxtmrunvysuzrxyqrvwxpuwptzyvwsuvqvoqxstvxztuntunpqxytltlrzwquyskswxrzyrsuywoqsyvxtwquwqrtlrwzvzxqvovqwpwxpvxyuywpwoqytvwskpvyzstytmnpvorwrvpxpwqwqytvwqvnprtvnqwrsztzumpqumuxrxptyuzuvxsvyswzrtmnvztxtlqxquvqrzrwzvxtysyqtuwzxpstwotzrswquywruvwqvxyzsyqsyzvnvpxuzvnrvzxpwzvxtxqyszrvzrwxpxpxskmorsxquouxyzvzvxuvnpuxyzwxyvnsuvptuxzumtmunpsvytwyryunvpwowquvprwptzwzuvyvxsxtvnskqysxsxtywotlmntxqysvnvqrwyuopxsyrtwztzskptmrvzrtwquwrsuvxsywsunptuyzsvnqwqyzyruxtzvwqvwpqxptlsxunosxuxpxyrzytvzyqxytxyuyrumtuyzrvzvpwzunotmsywqvwqswqvotmsvnpszunpsxszwruvxyvotwsysuwsyzxpxuwqxpwxtwoumovwyzryvyumqwzyswotzxzuvnsxuywyskmtlmrtxyzsyumpwpwrzrstmrwxysuouyuzvwpwxqwqsxpqtzuxsxuxyrvwsxrskmswyuwywpwsvptzwowptvwskotwxzvnqruyuzuzwzrxpsvxzxpuxyzxtyuyszvwpvzxzyrwztvyzvzxswpwszryvyvnpvnvyuwrvnouzxpuzvopwrywztlqywstmqrtmouwxrytmtvyworzvwxrxprwytzrztuovpwpsyvwswzuxswqvzwyvzswxtxpquovxtyuvotxunvquxumsxzyzrvwzsknqvwstyrsvytywsuzswswotxptltztltlpxuyuwryuvytxtuwpuovwxrwouwqvxskltxstloskpqtuvqxsuztvywyqtmquxuzxrsuzwquntmtzwqtxzrwstzwzvpwpqtlruwzuntwswyztmpqywquwztyrvytxswxqvyvyzuosyrtxywsvovzxtltmosuovyuytztyvzyqsuywzswytlowpryzumsvxztmtxuvorskostmotlrvxsuxuwpsklpqxzsuzrzskruxqrvyqrxytlowxywopumtmtlounotyvosvxrtvzxruytwsyvqtvyzruxstwxrxqrzrxzyzwpszwqstlruvwzyvqvyrxptxptxrwsyrtuzuovqvzsxtuztywxunvoqywrwqrtxzxyszsuxzrztlpswrunqtytvpqwzyrxuvpxquwystuxyuzvwoqtvpwzwowrztwyskmrvystwqtwxqxyskovprskltyztmorxunotxyqruwywoqxpuotmswpvnuxrsxtwswovqxpwopxpryryuxstzwqwyqtvqwskmpvpqvzytxpwysxsklqvyvxtvqvprsxuxumqxtxtmprzrxtmsknvxswstlmowqvyquounopuxzvxqxptmoskqxuouyqwxtltmrwqvpryrxpvzstvnrtzxtwovxszuysworswoqsyrsvyrvztmruvwqyryuoszwpvqxyumoqxzvwovzuopxrsxszwosyszvyvxunptltyvnrtwovyrvyvnpvotwsvouowostwzrytmouwxtxpwprxpwswyryquyrunvqryvqwsvotzxtyqvxquorwstxptvxzyrtlmsxsknouyuwsknpskovzvxunrvnrtuxununtunqvxtlmtuysxzyquxqxqwyqxsuzwoquotlskrztmptwswzszytyszvzwqytyworxqrwrzwsuouopxtmuvyszstuyzumotvoruxprwzvxpqtlpqxtxtvxsuzunrxuosxpvzyvptxrvpumtwzxqvyvpwptvztmtwquovptvxyszuzunuotwovwqvzrzxrxtxzywptwoskrzvyruvytlnsystysuwzuzvqwzyzxtltxtwysvzxzunuxqtltywstzryqyrswqryzwouzwoumsxzvopsvxrvotvpumtlqxrxytwrywysztmotmqxyzxqwzuwyvwpqwstvpumuouoswowzwqtxpqrtywszxzszunvxunoptmqysvxpxtwptwxyuyrwrxuvzxzstwptuwztxtyvowyvxzwqvwyztyzxrtlrvprvostvntxrwrztzxuwzuwoprsyumqxsxuxpswpxpuyuywyswzrzunvpxrszyquzxrvzxuyzszvxpunrztwsxuvzrtvnotxzwpuyzrvovopvzstwrvpqwquzsxtmovnrwryswyuwosknqytmpryqywsyszunswywowptuwrsyuxptlrxyuowrsywoqrvqsxsuxprwsuwotuxtzrvwrvqwxrwyskqytvwpqsvquyumqwzytzywxszyvywoqyrxyrwyzsyuxyvpvqxzxqtwstwqtytyuywsuotvqsxqszvortuzyvoswxysxsumuyuwxpsxzruxrywxprwosvyruxsksyryzxprtwqtvwryrxqwpsyvqyzruzsuxsknumqywywzxrskowrtvxtmotzvwsxumqwqtuzvxrxuyrtmszryquzyqswotlotxprxpwywszvotzuwsxyvnswpwpvyrzsunovovnvxqtuxpuzwxsyqrsyryuwrumsumrztxqywxpuvzyvqvnrwoqunsxunrskotmnvqywqxrxuowprzxryvwrytlrskptxtxumquzxywsywyrswrysxtywzxzxrwrskrsvytyvowxpryqvysumntuxqswrxpuzsxpqswzruxquwqyuxzwszwqwsuwxysyruzswoqtvzysxrwxpvyvqwxzywzxzryzxunsumtwszrzvqyuwztzrxqyrstuvoprszsunsxzvzyrzywyvnuwrxyuoquowsklntvnpvwrtvzywrtxtuzysxtwqxysumsvqxuuxqvsmusyxqwtxsyzutxtrwyzvtrwvpnvtnlkswouqouyxrwunvywyzryzvzxsnuszsrpovutsryqxrztzwuyqvzrzswtmusnuxzyrzxzwyzxwqvyvpxwrxsyzvtqowszurysyxwuswqwzswzxuyqwuqxurzwsqpxszupxrwsqxutnmusyvqyrpxwovytyvsrksrwrxzxzwytxsyrwsrywyswyxzuqmuxtxtpksrltyrwvyrxzrpwouxrxqwyqvnmtoksrnuxsnuqowrnvqvyzvupxwyqxtzrmusmurwuyrysrqysxwzupxutqxvnvovonuszryvpwpwsnvyxswuztovzswywpxrpxtoltowsqyzuqyrzsmtryuxrxvzutqwqmuxswvztomtxvtrwoksrxzwywyqmunksxuszurzyqvyspwqxryrwvtqwtrpxzyrysksxuryvsowrpxwyrxurzxspxwuyumusxsyxwsovyzutrovzsqxsqvtouswyuytytqwtswtqxzxqvpvyxuyszywryxryqowyvyzsxwyztyzwqmuyuqvsqpwvtyqksywrxwqvrwvrztxutowuswrpxusxsqvrqowysrwouyxrltpxuysrwutpwowywsnuzsyswyqyrpmtyqnksowuywsyrwrnvomtxszuqwqpvrwtszvpovovrzyupwzxtonvtrzvuxswtzrnupxvzszyuxzvrxzuqyzsrxpvnuzrzwsywyuyupxpwspxuxsxqmuysrpowuzwuxztzrwrxtnvtsovrpvrltrxzytzywvqwzxvywovytxtzwutpwtszxzvuxrwryuyxwtpwtxpxvsyqmtponuxvnuzszxzswytrqpxtqwzwowsououmupvtswqpwvywuzwqxzyxqmtomtzsywyrwtyxrxqltmupvtovrxvspovzxsmuowzuowzyrqwsryqyrztswytltqxunuzxzvsywtxtltxzyzwqvzuzwusytsysnltyvuryvzrksowtpwyzxtxrxzrzvqwvowtounuzuzsyxvtpvouqwtmtzvtpwpvyvqxzwtmupvrxtpvyzvpxsouxrnuzusxvtxtxqpltqpxvzwrpxurovtomuzyutszsyvumtxpououswzrwrqxrowytyqwzvzsytyzszwswtpmtzrksltouqowzusxqywqxqxuqyzxsyutmltxvqnutnunuxutrnvrnuxvzvokspnkswuyuonksxsmltryzxvtpxtswrouqxvqytxztovswqvyrqvnuryuqyrywswpxrpwpxtxwuomtyrzwtsowouovswtovpnvyvryvowtrnvytltpnuxvyvzsysowzsxsrxpouzvowvzxqomuyxqvpwzsouyryqwvurmtzvryvsrysqowsrowsyuzsxvowtxztrnvtszvpxryrpvqwrmtltxwqyuouxqksomtpxqxvzxuponuouqyvqwomltswsxvnksmtxrzrpmtxtxqmuxuxsrpvqvtxvyvqlksxsywpxtyzvqpvpmkswqvtqywqwztsxuyryrpxpowpxqvowswtxsrxunvpwsmtoupxqowywurqyxtonuxromtzytlksrpvoksyxqxwtqwtsyvrmksywtzrwowzwpvtqowvzuyxutsywuqxpvuxryzwqpvtytqnurwspltzrzxuszsyxzxtrqwrwyqovnuxwytzutxszvqvouzutryswrxtpxtpxryvqvyzwvurltsqwzspwzyzxrzrqxrxwtsxurzyvtqvyswtyurxzvtrxvsovytonuoltmtmupowyxwoltyxrqyvrqxurkszrzuszxqplkspwuxusxvrltomtsoksrovuxtmtzxvsmuzyrpwoltywszwyusqyzvytztyuyvousomtltxzvovswyxtrysouzyvyvqxwsxtyvrytzwuqwyqpmtzywswtnuzwurltqpwpvzwztswrzxtqwztmtnuqwzusrxzuxuqmtqywyvtzusxqvutqpksoltsxtlksxvqwuowrxwvoupwutxtyvuyrwuyuxpltltztltpxtowswszuswytyvsrytswvqnkszwvrzyzxsmuxuqvnuxtovuytxvouqpxtxwszvywzvqwsxuzwswvyspwpvoutzrztywrpxrxwvzrowyvtmtyrxwuomtrqmtswyqltzwyrwpovzupxzuonvrwuyvnvpnvyvyrzswpwsxzvzyvtzwryzxzvpwvzsyuytxzyxupxzxvspxrzwzuzuyurqnvzxwtokswvtpwowztpvswpwywuywsmksrxswvryxuxsxuztqpxsqwqxwpwvzuyuousyxwrmtsrzrwpwpmuyszyxtrmltmksywyuxsnvuzxztowsyzwqmuyvyrzywvomuowtxwpxqwuxpxzyswusyswtovyxvurwzsxspnuzspnvsmtovqwsqwvqwysmtonuzwpvzvrzyutmuryuyxtyxqyzvtyzryxpxuxsonuxsltpxqpwvqwvztxuryzyqwqnvszyutpnuswysxvusrwuqwtrzvrmtpksztzwtrysxpouywrqvnvsyqxtnmltowytxsxsyqksnvtxsxvyvuzwztpwrpvuqwowpvnuyrywtyvspnumtmuzxutpvusnvyxwzyxupnvuxvzvzyxuouqxsromksxpxpxwrzvrzsyqxtxvzwpxzvrnvzuxpvnvzysqyszyxvqwvurwyuqwsrztowtspxzwutqysytxvzwrzrqvuqxqltxtzvnmtrzwsyvsxvuzuytpxrxumuqpmuztzsrwqnvtrpnvqwvtyqwqwpxpvrwrovpnmtytszyvpkswvtyqowpwyuyxvpxwpwqvovqxzvzwrltrqwuqwtxvysqowyusryzrxwsksyuqwzrltltyxqpnutnutzxvtsxqovqvuswvyztpwupxwvrqyxrzusyvnurmtxvnuqmurwpxvqvutxtsxspnksronvzsnuzrpxvzwzvtywqpwouyvrpxpowuqwztztmtyqpnurwspwsouxvsxzysywoutyqywovrpwrowpowywzwqpmuyqxwuqxvzywqxwovovsrltzswyxqwsqmtxumuonuxvowywryxuyqvzsytztrxqovrmusowoksyuyxuxvonltlkswvnmtqkspnvyxwtsxrpnvzwvnlksxwvrouqyzvutrzyxsmuqxryrwyxwqpxzswvrwowvyxwyuqomusnvtnupksrwzusovuzuovutztspksxpowuonvrqwrnvonvsouqwuyzwywpksyrowzwvyqwqxutxrpxqvuowzrwrpnuovqpxwtqvtpvsmuzrltrxryvouqxswupxszuqowowpwpvtnutrnksrzrpoutyszwuouzwywyxsrzxsovyvzyqxusxwusxztzvzwusyxvzuyuxvyvztzspmuqvuzryvyvysrzxszyvyzyrxsxtxpxqyqwuxsxpvtxsxzxzvurwswyvtzupxwyrxwqnvzusywsovtltnvzyvqxrytxvzxvsqnunuqxuyvqytsxsmuxryvsxvyzyzrwzuqpksnupwrnvztqpnvzxvuzyvtouywzyuzsovsqxvouytxrzswqovytovyuqxronupnvtxzspmtouxuouytrwzxtyrpvnumuqxqmksrxrwtsmutpxutsyurzrnutxvtsnuqvsxtnvzrpovrysyrytlksrltxspvuzrpvpxrxtrywuonuszsmuqpvtyrwpwovsqpxsnvyzxvsxutowsyvsowqxwrqvovysxwzvomtzrowsmuzxvztzrqxszxzyvswvsqwuxsytonuzsqvqvqyuxspwowqnvsomuswpxrxwztspksxvswvqwsqwvyqxtrywtmltpowvtrxtzxzsyswvzszwoutqyxwzwvuqyrovqvyrwsourwtrzyvqxwtztspxzxvtqxsyzswomuxztqyuxuxzwzwpwunmuxrxqwtrxsnvyxurztsqyxqvrpovyuyvqyvpovqxuztsqwyrxwswqwsyqwzyqltmuzxuzywzvnuyxvzwslksmtpxryzxsouowvtqwuqpxrqxqwtxwupwuzrwztpxsytzvnvpmtsqxtyupowtsrzuxuswyrowtzsysrxwvpvryupmltxsysowyvuxsywrztsyzyupwzrwsmtywpovqowovrpovzurltqvywqnurkswvzvsksyuzsztzvzsyxvpnvuxuzrzsxwqvqwrnvpxwzxpwsyqyvpwrwswpltsrnmusltyrousxqowswtrxvzxqpke
'''

raw_input = MockInput(*input.split("\n"))

import string
count = int(raw_input().strip())

for c in xrange(count):
    line = raw_input().strip()
    length = len(line)

    count = 0
    for i in xrange(1, length):
        a = string.ascii_lowercase.index(line[i])
        b = string.ascii_lowercase.index(line[i-1])

        c = string.ascii_lowercase.index(line[length-i])
        d = string.ascii_lowercase.index(line[length-i-1])

        if abs(c - d) == abs(a - b):
            count += 1
        else:
            print "Not Funny"
            break
    if count == len(line)-1:
        print "Funny"
